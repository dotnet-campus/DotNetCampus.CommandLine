<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
      PublicKeyToken=b77a5c561934e089
    </value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral,
      PublicKeyToken=b77a5c561934e089
    </value>
  </resheader>
  <data name="DCL201_202_Fix_OptionTypeToBoolean" xml:space="preserve">
        <value>命令行选项：改为布尔类型 (bool)</value>
    </data>
  <data name="DCL201_202_Fix_OptionTypeToDictionary" xml:space="preserve">
        <value>命令行选项：改为字典类型 (IReadOnlyDictionary&lt;string, string&gt;)</value>
    </data>
  <data name="DCL201_202_Fix_OptionTypeToDouble" xml:space="preserve">
    <value>命令行选项：改为浮点数类型 (double)</value>
  </data>
  <data name="DCL201_202_Fix_OptionTypeToInt32" xml:space="preserve">
        <value>命令行选项：改为整数类型 (int)</value>
    </data>
  <data name="DCL201_202_Fix_OptionTypeToList" xml:space="preserve">
        <value>命令行选项：改为列表类型 (IReadOnlyList&lt;string&gt;)</value>
    </data>
  <data name="DCL201_202_Fix_OptionTypeToString" xml:space="preserve">
        <value>命令行选项：改为字符串类型 (string)</value>
    </data>
  <data name="DCL202_Description" xml:space="preserve">
    <value>作为命令行选项，此属性的类型 {0} 不被内置支持。 建议使用 bool / string / IReadOnlyList&lt;string&gt; 或代码修复会建议您更改的其他类型，或者在 Value / Option 特性上添加自定义转换器。</value>
  </data>
  <data name="DCL202_Message" xml:space="preserve">
        <value>作为命令行选项，此属性的类型 {0} 不被内置支持。</value>
    </data>
  <data name="DCL202" xml:space="preserve">
        <value>不支持此类型的命令行属性</value>
    </data>
  <data name="DCL101_Message" xml:space="preserve">
    <value>选项名称 {0} 应该使用 kebab-case 命名法命名，即使真实使用命令行传参的时候你可以使用任意风格，但定义应该是 kebab-case 风格。</value>
  </data>
  <data name="DCL101_Description" xml:space="preserve">
    <value>选项名称的定义建议使用 kebab-case 命名法命名，即使真实使用命令行传参的时候你可以使用任意风格，但定义也应该是 kebab-case 风格。</value>
  </data>
  <data name="DCL101_Fix1" xml:space="preserve">
        <value>改成 kebab-case 命名法</value>
    </data>
  <data name="DCL101" xml:space="preserve">
    <value>选项名称建议使用 kebab-case 命名法</value>
  </data>
  <data name="DCL201_Description" xml:space="preserve">
        <value>此属性的类型 {0} 符合命令行选项的类型要求。</value>
    </data>
  <data name="DCL201_Message" xml:space="preserve">
        <value>此属性的类型 {0} 符合命令行选项的类型要求。</value>
    </data>
  <data name="DCL201" xml:space="preserve">
        <value>符合要求的命令行选项类型</value>
    </data>
  <data name="DCL203" xml:space="preserve">
    <value>不支持此类型的原始命令行参数</value>
  </data>
  <data name="DCL203_Message" xml:space="preserve">
    <value>[RawArguments] 只能标记在 string[] 或 IReadOnlyList&lt;string&gt; 属性上。</value>
  </data>
  <data name="DCL203_Description" xml:space="preserve">
    <value>要接收原始命令行参数（通常是 string[] 类型），你应该也使用相同的属性类型 string[] 或其接口 IReadOnlyList&lt;string&gt;。</value>
  </data>
  <data name="DCL102" xml:space="preserve">
    <value>选项名称建议使用 kebab-case 命名法</value>
  </data>
  <data name="DCL102_Message" xml:space="preserve">
    <value>选项名称 {0} 有可能不是 kebab-case 命名法命名。</value>
  </data>
  <data name="DCL102_Description" xml:space="preserve">
    <value>选项名称的定义有可能不是 kebab-case 命名法命名。</value>
  </data>
</root>
