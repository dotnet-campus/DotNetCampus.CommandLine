//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotNetCampus.CommandLine.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Localizations {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localizations() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DotNetCampus.CommandLine.Properties.Localizations", typeof(Localizations).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option/Command long name should be kebab-case.
        /// </summary>
        public static string DCL101 {
            get {
                return ResourceManager.GetString("DCL101", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option/command name should be kebab-case nomenclature to disambiguate.
        /// </summary>
        public static string DCL101_Description {
            get {
                return ResourceManager.GetString("DCL101_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert to kebab-case.
        /// </summary>
        public static string DCL101_Fix1 {
            get {
                return ResourceManager.GetString("DCL101_Fix1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option/command name should be kebab-case nomenclature to disambiguate.
        /// </summary>
        public static string DCL101_Message {
            get {
                return ResourceManager.GetString("DCL101_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option/Command long name may not be kebab-case.
        /// </summary>
        public static string DCL102 {
            get {
                return ResourceManager.GetString("DCL102", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command-line option/command definition names may not be kebab-case..
        /// </summary>
        public static string DCL102_Description {
            get {
                return ResourceManager.GetString("DCL102_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option/command definition long name &apos;{0}&apos; may not be kebab-case..
        /// </summary>
        public static string DCL102_Message {
            get {
                return ResourceManager.GetString("DCL102_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recommended option property type.
        /// </summary>
        public static string DCL201 {
            get {
                return ResourceManager.GetString("DCL201", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;bool&apos; type instead.
        /// </summary>
        public static string DCL201_202_Fix_OptionTypeToBoolean {
            get {
                return ResourceManager.GetString("DCL201_202_Fix_OptionTypeToBoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use `IReadOnlyDictionary&lt;string, string&gt;` type instead.
        /// </summary>
        public static string DCL201_202_Fix_OptionTypeToDictionary {
            get {
                return ResourceManager.GetString("DCL201_202_Fix_OptionTypeToDictionary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;double&apos; type instead.
        /// </summary>
        public static string DCL201_202_Fix_OptionTypeToDouble {
            get {
                return ResourceManager.GetString("DCL201_202_Fix_OptionTypeToDouble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;int&apos; type instead.
        /// </summary>
        public static string DCL201_202_Fix_OptionTypeToInt32 {
            get {
                return ResourceManager.GetString("DCL201_202_Fix_OptionTypeToInt32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use `IReadOnlyList&lt;string&gt;` type instead.
        /// </summary>
        public static string DCL201_202_Fix_OptionTypeToList {
            get {
                return ResourceManager.GetString("DCL201_202_Fix_OptionTypeToList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;string&apos; type instead.
        /// </summary>
        public static string DCL201_202_Fix_OptionTypeToString {
            get {
                return ResourceManager.GetString("DCL201_202_Fix_OptionTypeToString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property has a recommended option property type &apos;{0}&apos;..
        /// </summary>
        public static string DCL201_Description {
            get {
                return ResourceManager.GetString("DCL201_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property has a recommended option property type &apos;{0}&apos;..
        /// </summary>
        public static string DCL201_Message {
            get {
                return ResourceManager.GetString("DCL201_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not supported command-line property type.
        /// </summary>
        public static string DCL202 {
            get {
                return ResourceManager.GetString("DCL202", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As a command-line option, the property type &apos;{0}&apos; is not supported. It is recommended to use bool/string/IReadOnlyList&lt;string&gt; or another type that the code fix may suggest, or add a custom converter on your Value or Option attribute..
        /// </summary>
        public static string DCL202_Description {
            get {
                return ResourceManager.GetString("DCL202_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As a command-line option, the property type &apos;{0}&apos; is not supported..
        /// </summary>
        public static string DCL202_Message {
            get {
                return ResourceManager.GetString("DCL202_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not supported raw command-line argument type.
        /// </summary>
        public static string DCL203 {
            get {
                return ResourceManager.GetString("DCL203", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To receive raw command-line arguments (typically string[]), you should also use the same property type string[] or the interface IReadOnlyList&lt;string&gt;..
        /// </summary>
        public static string DCL203_Description {
            get {
                return ResourceManager.GetString("DCL203_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [RawArguments] can only be applied to properties of type string[] or IReadOnlyList&lt;string&gt;..
        /// </summary>
        public static string DCL203_Message {
            get {
                return ResourceManager.GetString("DCL203_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicated option name.
        /// </summary>
        public static string DCL204 {
            get {
                return ResourceManager.GetString("DCL204", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicated option name {0}.
        /// </summary>
        public static string DCL204_Description {
            get {
                return ResourceManager.GetString("DCL204_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicated option name {0}.
        /// </summary>
        public static string DCL204_Message {
            get {
                return ResourceManager.GetString("DCL204_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command type must not be a generic type or be declared in a generic type.
        /// </summary>
        public static string DCL301 {
            get {
                return ResourceManager.GetString("DCL301", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command type {0} must not be a generic type or be declared in a generic type..
        /// </summary>
        public static string DCL301_Description {
            get {
                return ResourceManager.GetString("DCL301_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command type {0} must not be a generic type or be declared in a generic type..
        /// </summary>
        public static string DCL301_Message {
            get {
                return ResourceManager.GetString("DCL301_Message", resourceCulture);
            }
        }
    }
}
