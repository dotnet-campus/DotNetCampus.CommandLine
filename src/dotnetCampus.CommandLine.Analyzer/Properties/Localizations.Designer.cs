//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dotnetCampus.CommandLine.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Localizations {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localizations() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("dotnetCampus.CommandLine.Properties.Localizations", typeof(Localizations).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;bool&apos; type instead.
        /// </summary>
        internal static string ConvertOptionPropertyTypeToBooleanFix {
            get {
                return ResourceManager.GetString("ConvertOptionPropertyTypeToBooleanFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use `IReadOnlyDictionary&lt;string, string&gt;` type instead.
        /// </summary>
        internal static string ConvertOptionPropertyTypeToDictionaryFix {
            get {
                return ResourceManager.GetString("ConvertOptionPropertyTypeToDictionaryFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;DirectoryInfo&apos; type instead.
        /// </summary>
        internal static string ConvertOptionPropertyTypeToDirectoryInfoFix {
            get {
                return ResourceManager.GetString("ConvertOptionPropertyTypeToDirectoryInfoFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;double&apos; type instead.
        /// </summary>
        internal static string ConvertOptionPropertyTypeToDoubleFix {
            get {
                return ResourceManager.GetString("ConvertOptionPropertyTypeToDoubleFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;FileInfo&apos; type instead.
        /// </summary>
        internal static string ConvertOptionPropertyTypeToFileInfoFix {
            get {
                return ResourceManager.GetString("ConvertOptionPropertyTypeToFileInfoFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;int&apos; type instead.
        /// </summary>
        internal static string ConvertOptionPropertyTypeToInt32Fix {
            get {
                return ResourceManager.GetString("ConvertOptionPropertyTypeToInt32Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use `IReadOnlyList&lt;string&gt;` type instead.
        /// </summary>
        internal static string ConvertOptionPropertyTypeToListFix {
            get {
                return ResourceManager.GetString("ConvertOptionPropertyTypeToListFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use &apos;string&apos; type instead.
        /// </summary>
        internal static string ConvertOptionPropertyTypeToStringFix {
            get {
                return ResourceManager.GetString("ConvertOptionPropertyTypeToStringFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property has the type &apos;{0}&apos; which is not built-in supported. It&apos;s recommended to use bool/string/IList&lt;string&gt; or other types that the code fix will suggest you change instead or add a custom converter on your Value or Option attribute..
        /// </summary>
        internal static string NotSupportedOptionPropertyTypeDescription {
            get {
                return ResourceManager.GetString("NotSupportedOptionPropertyTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property has the type &apos;{0}&apos; which is not built-in supported..
        /// </summary>
        internal static string NotSupportedOptionPropertyTypeMessage {
            get {
                return ResourceManager.GetString("NotSupportedOptionPropertyTypeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not supported property type.
        /// </summary>
        internal static string NotSupportedOptionPropertyTypeTitle {
            get {
                return ResourceManager.GetString("NotSupportedOptionPropertyTypeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command-line option definition names must be kebab-case, even though you can use any kind of style in the command line environment..
        /// </summary>
        internal static string OptionLongNameMustBeKebabCaseDescription {
            get {
                return ResourceManager.GetString("OptionLongNameMustBeKebabCaseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert to kebab-case.
        /// </summary>
        internal static string OptionLongNameMustBeKebabCaseFix {
            get {
                return ResourceManager.GetString("OptionLongNameMustBeKebabCaseFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The option definition long name &apos;{0}&apos; must be kebab-case, even though you can use any kind of style in the command line environment..
        /// </summary>
        internal static string OptionLongNameMustBeKebabCaseMessage {
            get {
                return ResourceManager.GetString("OptionLongNameMustBeKebabCaseMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option long name must be kebab-case.
        /// </summary>
        internal static string OptionLongNameMustBeKebabCaseTitle {
            get {
                return ResourceManager.GetString("OptionLongNameMustBeKebabCaseTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property has a recommended option property type &apos;{0}&apos;..
        /// </summary>
        internal static string SupportedOptionPropertyTypeDescription {
            get {
                return ResourceManager.GetString("SupportedOptionPropertyTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property has a recommended option property type &apos;{0}&apos;..
        /// </summary>
        internal static string SupportedOptionPropertyTypeMessage {
            get {
                return ResourceManager.GetString("SupportedOptionPropertyTypeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recommended option property type.
        /// </summary>
        internal static string SupportedOptionPropertyTypeTitle {
            get {
                return ResourceManager.GetString("SupportedOptionPropertyTypeTitle", resourceCulture);
            }
        }
    }
}
